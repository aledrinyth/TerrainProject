name: CI

on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["**"]
  schedule:
    - cron: "0 14 * * *"   # daily at ~00:00 AEST
  workflow_dispatch: {}

concurrency:
  group: ci-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # -------------------- Backend unit tests --------------------
  backend-unit:
    name: Backend unit tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: terrainapp/backend
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: terrainapp/backend/package-lock.json
      - run: npm ci
      - run: npm test -- --runInBand

  # -------------------- Webapp unit tests ---------------------
  webapp-unit:
    name: Webapp unit tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: terrainapp/webapp
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: terrainapp/webapp/package-lock.json
      - run: npm ci
      - run: npm test -- --runInBand

  # -------------------- End-to-End (Playwright) ---------------
  e2e:
    name: E2E tests (Playwright)
    runs-on: ubuntu-latest
    needs: [backend-unit, webapp-unit]
    timeout-minutes: 30
    env:
      GCP_PROJECT: demo-terrain
      FIRESTORE_EMULATOR_HOST: localhost:8080
      VITE_API_BASE_URL: http://localhost:6969/api
    steps:
      - uses: actions/checkout@v4

      # Backend deps
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: terrainapp/backend/package-lock.json
      - run: npm ci
        working-directory: terrainapp/backend

      # Webapp deps
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: terrainapp/webapp/package-lock.json
      - run: npm ci
        working-directory: terrainapp/webapp

      # E2E deps (Playwright, wait-on, firebase-tools, concurrently via package.json)
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: terrainapp/e2e/package-lock.json
      - run: npm ci
        working-directory: terrainapp/e2e

      - name: Install Playwright browsers
        run: npm run install:browsers
        working-directory: terrainapp/e2e

      - name: Cache Firebase emulators
        uses: actions/cache@v4
        with:
          path: $HOME/.cache/firebase/emulators
          key: firebase-emulators-${{ runner.os }}-v1

      - name: Start services (emulators + api + web) and wait
        env:
          NODE_ENV: development
          GCP_PROJECT: ${{ env.GCP_PROJECT }}
          FIRESTORE_EMULATOR_HOST: ${{ env.FIRESTORE_EMULATOR_HOST }}
          VITE_API_BASE_URL: ${{ env.VITE_API_BASE_URL }}
        run: |
          cd terrainapp/e2e
          npx concurrently -k -n EMU,API,WEB "npm:dev:emu" "npm:dev:api" "npm:dev:web" & echo $! > /tmp/pid-services
          npm run wait:all

      - name: Seed Firestore + Auth
        run: npm run seed:all
        working-directory: terrainapp/e2e

      # IMPORTANT: CI config disables Playwright.webServer to avoid port conflicts
      - name: Run Playwright E2E
        run: npx playwright test --config=playwright.ci.config.js --workers=1
        working-directory: terrainapp/e2e

      - name: Upload Playwright report (on failure)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: terrainapp/e2e/playwright-report
          if-no-files-found: ignore

      - name: Upload service logs (on failure)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: service-logs
          path: |
            terrainapp/e2e/emulators.log
            terrainapp/e2e/api.log
            terrainapp/e2e/web.log
          if-no-files-found: ignore

      - name: Cleanup background services
        if: always()
        run: |
          if [ -f /tmp/pid-services ]; then
            kill -TERM "$(cat /tmp/pid-services)" || true
            sleep 3
          fi

  # -------------------- Performance (LHCI + Playwright smoke)
  perf:
    name: Performance (LHCI + API Smoke)
    runs-on: ubuntu-latest
    needs: [e2e]     # always run after e2e
    timeout-minutes: 30
    env:
      GCP_PROJECT: demo-terrain
      FIRESTORE_EMULATOR_HOST: localhost:8080
      VITE_API_BASE_URL: http://localhost:6969/api
      # API smoke env (Option B)
      API_BASE: http://localhost:6969/api
      SMOKE_RUNS: 10
      SMOKE_MAX_MS: 300
    steps:
      - uses: actions/checkout@v4

      # Backend deps
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: terrainapp/backend/package-lock.json
      - run: npm ci
        working-directory: terrainapp/backend

      # Webapp deps
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: terrainapp/webapp/package-lock.json
      - run: npm ci
        working-directory: terrainapp/webapp

      # E2E deps (LHCI + wait-on etc.)
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: terrainapp/e2e/package-lock.json
      - run: npm ci
        working-directory: terrainapp/e2e

      - name: Install Playwright browsers (for LH audits if needed)
        run: npm run install:browsers
        working-directory: terrainapp/e2e

      - name: Cache Firebase emulators
        uses: actions/cache@v4
        with:
          path: $HOME/.cache/firebase/emulators
          key: firebase-emulators-${{ runner.os }}-v1

      - name: Start services (emulators + api + web) and wait
        env:
          NODE_ENV: development
          GCP_PROJECT: ${{ env.GCP_PROJECT }}
          FIRESTORE_EMULATOR_HOST: ${{ env.FIRESTORE_EMULATOR_HOST }}
          VITE_API_BASE_URL: ${{ env.VITE_API_BASE_URL }}
        run: |
          cd terrainapp/e2e
          npx concurrently -k -n EMU,API,WEB "npm:dev:emu" "npm:dev:api" "npm:dev:web" & echo $! > /tmp/pid-services
          npm run wait:all

      - name: Seed Firestore + Auth
        run: npm run seed:all
        working-directory: terrainapp/e2e

      # Lighthouse CI (expects terrainapp/e2e/.lighthouserc.json)
      - name: Run Lighthouse CI
        run: npx lhci autorun
        working-directory: terrainapp/e2e

      - name: Upload Lighthouse report
        uses: actions/upload-artifact@v4
        with:
          name: lhci-report
          path: terrainapp/e2e/lhci-report
          if-no-files-found: ignore

      # Playwright API smoke
      - name: Run API smoke (Playwright)
        run: npx playwright test terrainapp/e2e/api-smoke.spec.js --workers=5
        env:
          API_BASE: ${{ env.API_BASE }}
          SMOKE_RUNS: ${{ env.SMOKE_RUNS }}
          SMOKE_MAX_MS: ${{ env.SMOKE_MAX_MS }}

      - name: Upload perf service logs (on failure)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: perf-service-logs
          path: |
            terrainapp/e2e/emulators.log
            terrainapp/e2e/api.log
            terrainapp/e2e/web.log
          if-no-files-found: ignore

      - name: Cleanup background services
        if: always()
        run: |
          if [ -f /tmp/pid-services ]; then
            kill -TERM "$(cat /tmp/pid-services)" || true
            sleep 3
          fi