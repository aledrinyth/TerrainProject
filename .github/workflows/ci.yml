name: CI

on:
  push:
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: terrainapp

    steps:
      - uses: actions/checkout@v4

      # BACKEND UNIT TESTS
      - name: Setup Node (backend)
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: backend/package-lock.json

      - name: Install backend deps
        working-directory: terrainapp/backend
        run: npm ci

      - name: Run backend unit tests
        working-directory: terrainapp/backend
        run: npm test -- --runInBand

      # WEBAPP UNIT TESTS
      - name: Setup Node (webapp)
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: webapp/package-lock.json

      - name: Install webapp deps
        working-directory: terrainapp/webapp
        run: npm ci

      - name: Run webapp unit tests
        working-directory: terrainapp/webapp
        run: npm test -- --runInBand

      # E2E (start services, wait, seed, test) â€” SINGLE STEP
      - name: Setup Node (e2e)
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: e2e/package-lock.json

      - name: Install e2e deps + browsers
        working-directory: terrainapp/e2e
        run: |
          npm ci
          npm run install:browsers

      - name: Start services, wait, seed, run e2e
        working-directory: terrainapp/e2e
        env:
          # make sure backend points at emulator
          NODE_ENV: development
          GCP_PROJECT: demo-terrain
          FIRESTORE_EMULATOR_HOST: localhost:8080
          VITE_API_BASE_URL: http://localhost:6969/api
        run: |
          # start all 3 in background
          npm run dev:emu &
          npm run dev:api &
          npm run dev:web &

          # wait for all to be ready
          npm run wait:all

          # seed data
          npm run seed:all

          # run tests (single worker for stability)
          npm run ci:test