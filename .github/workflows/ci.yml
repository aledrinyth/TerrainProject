name: CI

on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["**"]
  # Perf job can also run on schedule or manual trigger
  schedule:
    - cron: "0 14 * * *"   # daily at 00:00 AEST (~14:00 UTC)
  workflow_dispatch: {}

# Cancel previous in-progress runs on same ref
concurrency:
  group: ci-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # -------------------- Backend unit tests --------------------
  backend-unit:
    name: Backend unit tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: terrainapp/backend
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js (with cache)
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: terrainapp/backend/package-lock.json

      - name: Install deps
        run: npm ci

      - name: Run unit tests (Jest)
        run: npm test -- --runInBand

  # -------------------- Webapp unit tests ---------------------
  webapp-unit:
    name: Webapp unit tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: terrainapp/webapp
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js (with cache)
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: terrainapp/webapp/package-lock.json

      - name: Install deps
        run: npm ci

      - name: Run unit tests (Jest / JSDOM)
        run: npm test -- --runInBand

  # -------------------- End-to-End (Playwright) ---------------
  e2e:
    name: E2E tests (Playwright)
    runs-on: ubuntu-latest
    needs: [backend-unit, webapp-unit]
    timeout-minutes: 30
    env:
      # Common env used by your scripts
      GCP_PROJECT: demo-terrain
      FIRESTORE_EMULATOR_HOST: localhost:8080
      VITE_API_BASE_URL: http://localhost:6969/api
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Backend deps (server runs from here)
      - name: Setup Node (backend) with cache
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: terrainapp/backend/package-lock.json

      - name: Install backend deps
        working-directory: terrainapp/backend
        run: npm ci

      # Webapp deps (Vite dev server)
      - name: Setup Node (webapp) with cache
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: terrainapp/webapp/package-lock.json

      - name: Install webapp deps
        working-directory: terrainapp/webapp
        run: npm ci

      # E2E deps (Playwright + firebase-tools + wait-on, etc.)
      - name: Setup Node (e2e) with cache
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: terrainapp/e2e/package-lock.json

      - name: Install e2e deps
        working-directory: terrainapp/e2e
        run: npm ci

      - name: Install Playwright browsers
        working-directory: terrainapp/e2e
        run: npm run install:browsers

      # Optional: cache Firebase emulator JARs to speed up
      - name: Cache Firebase emulators
        uses: actions/cache@v4
        with:
          path: ~/.cache/firebase/emulators
          key: firebase-emulators-${{ runner.os }}-v1

      # Start emulators + API + Web; wait for readiness (reuses e2e scripts)
      - name: Start services (emulators + api + web) and wait
        working-directory: terrainapp/e2e
        env:
          NODE_ENV: development
          GCP_PROJECT: ${{ env.GCP_PROJECT }}
          FIRESTORE_EMULATOR_HOST: ${{ env.FIRESTORE_EMULATOR_HOST }}
          VITE_API_BASE_URL: ${{ env.VITE_API_BASE_URL }}
        run: |
          # Run all three in background with names and wait until ready
          npx concurrently -k -n EMU,API,WEB "npm:dev:emu" "npm:dev:api" "npm:dev:web" & echo $! > /tmp/pid-services
          # Block until emulators, API and web are ready
          npm run wait:all

      - name: Seed Firestore + Auth (optional)
        working-directory: terrainapp/e2e
        run: npm run seed:all

      - name: Run Playwright E2E tests (single worker, headless)
        working-directory: terrainapp/e2e
        run: npx playwright test --workers=1

      - name: Upload Playwright report (on failure)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: terrainapp/e2e/playwright-report
          if-no-files-found: ignore

      - name: Cleanup background services
        if: always()
        run: |
          if [ -f /tmp/pid-services ]; then
            kill -TERM "$(cat /tmp/pid-services)" || true
            sleep 3
          fi

  # -------------------- Performance (LHCI + k6) ---------------
  perf:
    name: Performance (Lighthouse + k6)
    runs-on: ubuntu-latest
    needs: [e2e]     # only after E2E is green
    timeout-minutes: 30
    # Run only on schedule or manual dispatch by default
    if: github.event_name == 'workflow_dispatch' || github.event_name == 'schedule'
    env:
      GCP_PROJECT: demo-terrain
      FIRESTORE_EMULATOR_HOST: localhost:8080
      VITE_API_BASE_URL: http://localhost:6969/api
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Backend deps
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: terrainapp/backend/package-lock.json
      - working-directory: terrainapp/backend
        run: npm ci

      # Webapp deps
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: terrainapp/webapp/package-lock.json
      - working-directory: terrainapp/webapp
        run: npm ci

      # E2E deps (LHCI + wait-on live here)
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: terrainapp/e2e/package-lock.json
      - working-directory: terrainapp/e2e
        run: npm ci

      - name: Install Playwright browsers (for any LH audits that need it)
        working-directory: terrainapp/e2e
        run: npm run install:browsers

      - name: Cache Firebase emulators
        uses: actions/cache@v4
        with:
          path: ~/.cache/firebase/emulators
          key: firebase-emulators-${{ runner.os }}-v1

      # Start services (same as E2E) and wait
      - name: Start services (emulators + api + web) and wait
        working-directory: terrainapp/e2e
        env:
          NODE_ENV: development
          GCP_PROJECT: ${{ env.GCP_PROJECT }}
          FIRESTORE_EMULATOR_HOST: ${{ env.FIRESTORE_EMULATOR_HOST }}
          VITE_API_BASE_URL: ${{ env.VITE_API_BASE_URL }}
        run: |
          npx concurrently -k -n EMU,API,WEB "npm:dev:emu" "npm:dev:api" "npm:dev:web" & echo $! > /tmp/pid-services
          npm run wait:all

      - name: Seed Firestore + Auth (optional)
        working-directory: terrainapp/e2e
        run: npm run seed:all

      # --- Lighthouse CI (uses terrainapp/e2e/.lighthouserc.json) ---
      - name: Run Lighthouse CI
        working-directory: terrainapp/e2e
        run: npx lhci autorun

      - name: Upload Lighthouse report
        uses: actions/upload-artifact@v4
        with:
          name: lhci-report
          path: terrainapp/e2e/lhci-report
          if-no-files-found: ignore

      # --- k6 smoke test for API ---
      - name: Run k6 smoke
        uses: grafana/k6-action@v0.3.1
        with:
          filename: terrainapp/e2e/k6-smoke.js
        env:
          API_BASE: http://localhost:6969/api

      - name: Cleanup background services
        if: always()
        run: |
          if [ -f /tmp/pid-services ]; then
            kill -TERM "$(cat /tmp/pid-services)" || true
            sleep 3
          fi